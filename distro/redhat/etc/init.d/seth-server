#!/bin/bash
#
# seth-server Startup script for chef-server
#
# chkconfig: - 96 04
# description: Server component of the Seth systems integration framework.

### BEGIN INIT INFO
# Provides: seth-server
# Required-Start: $local_fs $network $remote_fs seth-solr chef-expander
# Required-Stop: $local_fs $network $remote_fs seth-solr chef-expander
# Should-Start: $named $time
# Should-Stop: $named $time
# Short-Description: Startup script for seth-server
# Description: Server component of the Seth systems integration framework.
### END INIT INFO

# Source function library
. /etc/init.d/functions

exec="/usr/bin/seth-server"
prog="seth-server"

[ -f /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

config=${CONFIG-/etc/seth/server.rb}
pidfile=${PIDFILE-/var/run/seth/server.main.pid}
lockfile=${LOCKFILE-/var/lock/subsys/$prog}
logfile=${LOGFILE-/var/log/seth/server.log}
port=${PORT-4000}
env=${ENVIRONMENT-production}
adapter=${ADAPTER-thin}
childpidfiles=${CHILDPIDFILES-/var/run/seth/server.%s.pid}
user=${SERVER_USER-seth}
group=${SERVER_GROUP-seth}
options=${OPTIONS-}

start() {
    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6
    echo -n $"Starting $prog: "
    daemon $prog -d -C "$config" -L "$logfile" -p "$port" -e "$env" \
                 -a "$adapter" -P "$childpidfiles" -u "$user" -G "$group" \
                 "$options" "&>/dev/null"
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p $pidfile $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart () {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status -p $pidfile $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
